// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ezcom.proto

#ifndef PROTOBUF_INCLUDED_ezcom_2eproto
#define PROTOBUF_INCLUDED_ezcom_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ezcom_2eproto 

namespace protobuf_ezcom_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ezcom_2eproto
namespace holosar {
namespace ezcom {
class ProtobufMessage;
class ProtobufMessageDefaultTypeInternal;
extern ProtobufMessageDefaultTypeInternal _ProtobufMessage_default_instance_;
}  // namespace ezcom
}  // namespace holosar
namespace google {
namespace protobuf {
template<> ::holosar::ezcom::ProtobufMessage* Arena::CreateMaybeMessage<::holosar::ezcom::ProtobufMessage>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace holosar {
namespace ezcom {

// ===================================================================

class ProtobufMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:holosar.ezcom.ProtobufMessage) */ {
 public:
  ProtobufMessage();
  virtual ~ProtobufMessage();

  ProtobufMessage(const ProtobufMessage& from);

  inline ProtobufMessage& operator=(const ProtobufMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtobufMessage(ProtobufMessage&& from) noexcept
    : ProtobufMessage() {
    *this = ::std::move(from);
  }

  inline ProtobufMessage& operator=(ProtobufMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtobufMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtobufMessage* internal_default_instance() {
    return reinterpret_cast<const ProtobufMessage*>(
               &_ProtobufMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ProtobufMessage* other);
  friend void swap(ProtobufMessage& a, ProtobufMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtobufMessage* New() const final {
    return CreateMaybeMessage<ProtobufMessage>(NULL);
  }

  ProtobufMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProtobufMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProtobufMessage& from);
  void MergeFrom(const ProtobufMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtobufMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double double_type = 1;
  int double_type_size() const;
  void clear_double_type();
  static const int kDoubleTypeFieldNumber = 1;
  double double_type(int index) const;
  void set_double_type(int index, double value);
  void add_double_type(double value);
  const ::google::protobuf::RepeatedField< double >&
      double_type() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_double_type();

  // repeated float float_type = 2;
  int float_type_size() const;
  void clear_float_type();
  static const int kFloatTypeFieldNumber = 2;
  float float_type(int index) const;
  void set_float_type(int index, float value);
  void add_float_type(float value);
  const ::google::protobuf::RepeatedField< float >&
      float_type() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_float_type();

  // repeated int32 int32_type = 3;
  int int32_type_size() const;
  void clear_int32_type();
  static const int kInt32TypeFieldNumber = 3;
  ::google::protobuf::int32 int32_type(int index) const;
  void set_int32_type(int index, ::google::protobuf::int32 value);
  void add_int32_type(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      int32_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_int32_type();

  // repeated int64 int64_type = 4;
  int int64_type_size() const;
  void clear_int64_type();
  static const int kInt64TypeFieldNumber = 4;
  ::google::protobuf::int64 int64_type(int index) const;
  void set_int64_type(int index, ::google::protobuf::int64 value);
  void add_int64_type(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      int64_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_int64_type();

  // repeated uint32 uint32_type = 5;
  int uint32_type_size() const;
  void clear_uint32_type();
  static const int kUint32TypeFieldNumber = 5;
  ::google::protobuf::uint32 uint32_type(int index) const;
  void set_uint32_type(int index, ::google::protobuf::uint32 value);
  void add_uint32_type(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uint32_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uint32_type();

  // repeated uint64 uint64_type = 6;
  int uint64_type_size() const;
  void clear_uint64_type();
  static const int kUint64TypeFieldNumber = 6;
  ::google::protobuf::uint64 uint64_type(int index) const;
  void set_uint64_type(int index, ::google::protobuf::uint64 value);
  void add_uint64_type(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      uint64_type() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_uint64_type();

  // repeated bool bool_type = 7;
  int bool_type_size() const;
  void clear_bool_type();
  static const int kBoolTypeFieldNumber = 7;
  bool bool_type(int index) const;
  void set_bool_type(int index, bool value);
  void add_bool_type(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      bool_type() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_bool_type();

  // repeated string string_type = 8;
  int string_type_size() const;
  void clear_string_type();
  static const int kStringTypeFieldNumber = 8;
  const ::std::string& string_type(int index) const;
  ::std::string* mutable_string_type(int index);
  void set_string_type(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_string_type(int index, ::std::string&& value);
  #endif
  void set_string_type(int index, const char* value);
  void set_string_type(int index, const char* value, size_t size);
  ::std::string* add_string_type();
  void add_string_type(const ::std::string& value);
  #if LANG_CXX11
  void add_string_type(::std::string&& value);
  #endif
  void add_string_type(const char* value);
  void add_string_type(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& string_type() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_string_type();

  // repeated bytes bytes_type = 9;
  int bytes_type_size() const;
  void clear_bytes_type();
  static const int kBytesTypeFieldNumber = 9;
  const ::std::string& bytes_type(int index) const;
  ::std::string* mutable_bytes_type(int index);
  void set_bytes_type(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_bytes_type(int index, ::std::string&& value);
  #endif
  void set_bytes_type(int index, const char* value);
  void set_bytes_type(int index, const void* value, size_t size);
  ::std::string* add_bytes_type();
  void add_bytes_type(const ::std::string& value);
  #if LANG_CXX11
  void add_bytes_type(::std::string&& value);
  #endif
  void add_bytes_type(const char* value);
  void add_bytes_type(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& bytes_type() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_bytes_type();

  // int64 msg_id = 10;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 10;
  ::google::protobuf::int64 msg_id() const;
  void set_msg_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:holosar.ezcom.ProtobufMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > double_type_;
  mutable int _double_type_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > float_type_;
  mutable int _float_type_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > int32_type_;
  mutable int _int32_type_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > int64_type_;
  mutable int _int64_type_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uint32_type_;
  mutable int _uint32_type_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > uint64_type_;
  mutable int _uint64_type_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > bool_type_;
  mutable int _bool_type_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> string_type_;
  ::google::protobuf::RepeatedPtrField< ::std::string> bytes_type_;
  ::google::protobuf::int64 msg_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ezcom_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtobufMessage

// repeated double double_type = 1;
inline int ProtobufMessage::double_type_size() const {
  return double_type_.size();
}
inline void ProtobufMessage::clear_double_type() {
  double_type_.Clear();
}
inline double ProtobufMessage::double_type(int index) const {
  // @@protoc_insertion_point(field_get:holosar.ezcom.ProtobufMessage.double_type)
  return double_type_.Get(index);
}
inline void ProtobufMessage::set_double_type(int index, double value) {
  double_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:holosar.ezcom.ProtobufMessage.double_type)
}
inline void ProtobufMessage::add_double_type(double value) {
  double_type_.Add(value);
  // @@protoc_insertion_point(field_add:holosar.ezcom.ProtobufMessage.double_type)
}
inline const ::google::protobuf::RepeatedField< double >&
ProtobufMessage::double_type() const {
  // @@protoc_insertion_point(field_list:holosar.ezcom.ProtobufMessage.double_type)
  return double_type_;
}
inline ::google::protobuf::RepeatedField< double >*
ProtobufMessage::mutable_double_type() {
  // @@protoc_insertion_point(field_mutable_list:holosar.ezcom.ProtobufMessage.double_type)
  return &double_type_;
}

// repeated float float_type = 2;
inline int ProtobufMessage::float_type_size() const {
  return float_type_.size();
}
inline void ProtobufMessage::clear_float_type() {
  float_type_.Clear();
}
inline float ProtobufMessage::float_type(int index) const {
  // @@protoc_insertion_point(field_get:holosar.ezcom.ProtobufMessage.float_type)
  return float_type_.Get(index);
}
inline void ProtobufMessage::set_float_type(int index, float value) {
  float_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:holosar.ezcom.ProtobufMessage.float_type)
}
inline void ProtobufMessage::add_float_type(float value) {
  float_type_.Add(value);
  // @@protoc_insertion_point(field_add:holosar.ezcom.ProtobufMessage.float_type)
}
inline const ::google::protobuf::RepeatedField< float >&
ProtobufMessage::float_type() const {
  // @@protoc_insertion_point(field_list:holosar.ezcom.ProtobufMessage.float_type)
  return float_type_;
}
inline ::google::protobuf::RepeatedField< float >*
ProtobufMessage::mutable_float_type() {
  // @@protoc_insertion_point(field_mutable_list:holosar.ezcom.ProtobufMessage.float_type)
  return &float_type_;
}

// repeated int32 int32_type = 3;
inline int ProtobufMessage::int32_type_size() const {
  return int32_type_.size();
}
inline void ProtobufMessage::clear_int32_type() {
  int32_type_.Clear();
}
inline ::google::protobuf::int32 ProtobufMessage::int32_type(int index) const {
  // @@protoc_insertion_point(field_get:holosar.ezcom.ProtobufMessage.int32_type)
  return int32_type_.Get(index);
}
inline void ProtobufMessage::set_int32_type(int index, ::google::protobuf::int32 value) {
  int32_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:holosar.ezcom.ProtobufMessage.int32_type)
}
inline void ProtobufMessage::add_int32_type(::google::protobuf::int32 value) {
  int32_type_.Add(value);
  // @@protoc_insertion_point(field_add:holosar.ezcom.ProtobufMessage.int32_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ProtobufMessage::int32_type() const {
  // @@protoc_insertion_point(field_list:holosar.ezcom.ProtobufMessage.int32_type)
  return int32_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ProtobufMessage::mutable_int32_type() {
  // @@protoc_insertion_point(field_mutable_list:holosar.ezcom.ProtobufMessage.int32_type)
  return &int32_type_;
}

// repeated int64 int64_type = 4;
inline int ProtobufMessage::int64_type_size() const {
  return int64_type_.size();
}
inline void ProtobufMessage::clear_int64_type() {
  int64_type_.Clear();
}
inline ::google::protobuf::int64 ProtobufMessage::int64_type(int index) const {
  // @@protoc_insertion_point(field_get:holosar.ezcom.ProtobufMessage.int64_type)
  return int64_type_.Get(index);
}
inline void ProtobufMessage::set_int64_type(int index, ::google::protobuf::int64 value) {
  int64_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:holosar.ezcom.ProtobufMessage.int64_type)
}
inline void ProtobufMessage::add_int64_type(::google::protobuf::int64 value) {
  int64_type_.Add(value);
  // @@protoc_insertion_point(field_add:holosar.ezcom.ProtobufMessage.int64_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ProtobufMessage::int64_type() const {
  // @@protoc_insertion_point(field_list:holosar.ezcom.ProtobufMessage.int64_type)
  return int64_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ProtobufMessage::mutable_int64_type() {
  // @@protoc_insertion_point(field_mutable_list:holosar.ezcom.ProtobufMessage.int64_type)
  return &int64_type_;
}

// repeated uint32 uint32_type = 5;
inline int ProtobufMessage::uint32_type_size() const {
  return uint32_type_.size();
}
inline void ProtobufMessage::clear_uint32_type() {
  uint32_type_.Clear();
}
inline ::google::protobuf::uint32 ProtobufMessage::uint32_type(int index) const {
  // @@protoc_insertion_point(field_get:holosar.ezcom.ProtobufMessage.uint32_type)
  return uint32_type_.Get(index);
}
inline void ProtobufMessage::set_uint32_type(int index, ::google::protobuf::uint32 value) {
  uint32_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:holosar.ezcom.ProtobufMessage.uint32_type)
}
inline void ProtobufMessage::add_uint32_type(::google::protobuf::uint32 value) {
  uint32_type_.Add(value);
  // @@protoc_insertion_point(field_add:holosar.ezcom.ProtobufMessage.uint32_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ProtobufMessage::uint32_type() const {
  // @@protoc_insertion_point(field_list:holosar.ezcom.ProtobufMessage.uint32_type)
  return uint32_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ProtobufMessage::mutable_uint32_type() {
  // @@protoc_insertion_point(field_mutable_list:holosar.ezcom.ProtobufMessage.uint32_type)
  return &uint32_type_;
}

// repeated uint64 uint64_type = 6;
inline int ProtobufMessage::uint64_type_size() const {
  return uint64_type_.size();
}
inline void ProtobufMessage::clear_uint64_type() {
  uint64_type_.Clear();
}
inline ::google::protobuf::uint64 ProtobufMessage::uint64_type(int index) const {
  // @@protoc_insertion_point(field_get:holosar.ezcom.ProtobufMessage.uint64_type)
  return uint64_type_.Get(index);
}
inline void ProtobufMessage::set_uint64_type(int index, ::google::protobuf::uint64 value) {
  uint64_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:holosar.ezcom.ProtobufMessage.uint64_type)
}
inline void ProtobufMessage::add_uint64_type(::google::protobuf::uint64 value) {
  uint64_type_.Add(value);
  // @@protoc_insertion_point(field_add:holosar.ezcom.ProtobufMessage.uint64_type)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ProtobufMessage::uint64_type() const {
  // @@protoc_insertion_point(field_list:holosar.ezcom.ProtobufMessage.uint64_type)
  return uint64_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ProtobufMessage::mutable_uint64_type() {
  // @@protoc_insertion_point(field_mutable_list:holosar.ezcom.ProtobufMessage.uint64_type)
  return &uint64_type_;
}

// repeated bool bool_type = 7;
inline int ProtobufMessage::bool_type_size() const {
  return bool_type_.size();
}
inline void ProtobufMessage::clear_bool_type() {
  bool_type_.Clear();
}
inline bool ProtobufMessage::bool_type(int index) const {
  // @@protoc_insertion_point(field_get:holosar.ezcom.ProtobufMessage.bool_type)
  return bool_type_.Get(index);
}
inline void ProtobufMessage::set_bool_type(int index, bool value) {
  bool_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:holosar.ezcom.ProtobufMessage.bool_type)
}
inline void ProtobufMessage::add_bool_type(bool value) {
  bool_type_.Add(value);
  // @@protoc_insertion_point(field_add:holosar.ezcom.ProtobufMessage.bool_type)
}
inline const ::google::protobuf::RepeatedField< bool >&
ProtobufMessage::bool_type() const {
  // @@protoc_insertion_point(field_list:holosar.ezcom.ProtobufMessage.bool_type)
  return bool_type_;
}
inline ::google::protobuf::RepeatedField< bool >*
ProtobufMessage::mutable_bool_type() {
  // @@protoc_insertion_point(field_mutable_list:holosar.ezcom.ProtobufMessage.bool_type)
  return &bool_type_;
}

// repeated string string_type = 8;
inline int ProtobufMessage::string_type_size() const {
  return string_type_.size();
}
inline void ProtobufMessage::clear_string_type() {
  string_type_.Clear();
}
inline const ::std::string& ProtobufMessage::string_type(int index) const {
  // @@protoc_insertion_point(field_get:holosar.ezcom.ProtobufMessage.string_type)
  return string_type_.Get(index);
}
inline ::std::string* ProtobufMessage::mutable_string_type(int index) {
  // @@protoc_insertion_point(field_mutable:holosar.ezcom.ProtobufMessage.string_type)
  return string_type_.Mutable(index);
}
inline void ProtobufMessage::set_string_type(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:holosar.ezcom.ProtobufMessage.string_type)
  string_type_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ProtobufMessage::set_string_type(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:holosar.ezcom.ProtobufMessage.string_type)
  string_type_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ProtobufMessage::set_string_type(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  string_type_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:holosar.ezcom.ProtobufMessage.string_type)
}
inline void ProtobufMessage::set_string_type(int index, const char* value, size_t size) {
  string_type_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:holosar.ezcom.ProtobufMessage.string_type)
}
inline ::std::string* ProtobufMessage::add_string_type() {
  // @@protoc_insertion_point(field_add_mutable:holosar.ezcom.ProtobufMessage.string_type)
  return string_type_.Add();
}
inline void ProtobufMessage::add_string_type(const ::std::string& value) {
  string_type_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:holosar.ezcom.ProtobufMessage.string_type)
}
#if LANG_CXX11
inline void ProtobufMessage::add_string_type(::std::string&& value) {
  string_type_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:holosar.ezcom.ProtobufMessage.string_type)
}
#endif
inline void ProtobufMessage::add_string_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  string_type_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:holosar.ezcom.ProtobufMessage.string_type)
}
inline void ProtobufMessage::add_string_type(const char* value, size_t size) {
  string_type_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:holosar.ezcom.ProtobufMessage.string_type)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProtobufMessage::string_type() const {
  // @@protoc_insertion_point(field_list:holosar.ezcom.ProtobufMessage.string_type)
  return string_type_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProtobufMessage::mutable_string_type() {
  // @@protoc_insertion_point(field_mutable_list:holosar.ezcom.ProtobufMessage.string_type)
  return &string_type_;
}

// repeated bytes bytes_type = 9;
inline int ProtobufMessage::bytes_type_size() const {
  return bytes_type_.size();
}
inline void ProtobufMessage::clear_bytes_type() {
  bytes_type_.Clear();
}
inline const ::std::string& ProtobufMessage::bytes_type(int index) const {
  // @@protoc_insertion_point(field_get:holosar.ezcom.ProtobufMessage.bytes_type)
  return bytes_type_.Get(index);
}
inline ::std::string* ProtobufMessage::mutable_bytes_type(int index) {
  // @@protoc_insertion_point(field_mutable:holosar.ezcom.ProtobufMessage.bytes_type)
  return bytes_type_.Mutable(index);
}
inline void ProtobufMessage::set_bytes_type(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:holosar.ezcom.ProtobufMessage.bytes_type)
  bytes_type_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ProtobufMessage::set_bytes_type(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:holosar.ezcom.ProtobufMessage.bytes_type)
  bytes_type_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ProtobufMessage::set_bytes_type(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  bytes_type_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:holosar.ezcom.ProtobufMessage.bytes_type)
}
inline void ProtobufMessage::set_bytes_type(int index, const void* value, size_t size) {
  bytes_type_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:holosar.ezcom.ProtobufMessage.bytes_type)
}
inline ::std::string* ProtobufMessage::add_bytes_type() {
  // @@protoc_insertion_point(field_add_mutable:holosar.ezcom.ProtobufMessage.bytes_type)
  return bytes_type_.Add();
}
inline void ProtobufMessage::add_bytes_type(const ::std::string& value) {
  bytes_type_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:holosar.ezcom.ProtobufMessage.bytes_type)
}
#if LANG_CXX11
inline void ProtobufMessage::add_bytes_type(::std::string&& value) {
  bytes_type_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:holosar.ezcom.ProtobufMessage.bytes_type)
}
#endif
inline void ProtobufMessage::add_bytes_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  bytes_type_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:holosar.ezcom.ProtobufMessage.bytes_type)
}
inline void ProtobufMessage::add_bytes_type(const void* value, size_t size) {
  bytes_type_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:holosar.ezcom.ProtobufMessage.bytes_type)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ProtobufMessage::bytes_type() const {
  // @@protoc_insertion_point(field_list:holosar.ezcom.ProtobufMessage.bytes_type)
  return bytes_type_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ProtobufMessage::mutable_bytes_type() {
  // @@protoc_insertion_point(field_mutable_list:holosar.ezcom.ProtobufMessage.bytes_type)
  return &bytes_type_;
}

// int64 msg_id = 10;
inline void ProtobufMessage::clear_msg_id() {
  msg_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProtobufMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:holosar.ezcom.ProtobufMessage.msg_id)
  return msg_id_;
}
inline void ProtobufMessage::set_msg_id(::google::protobuf::int64 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:holosar.ezcom.ProtobufMessage.msg_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace ezcom
}  // namespace holosar

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ezcom_2eproto
